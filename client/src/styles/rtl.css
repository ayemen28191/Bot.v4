/* RTL-specific styles for Arabic and other right-to-left languages */
/* Phase 1: Scoped and targeted RTL styles to prevent layout issues */

/* =================================
   Base RTL Setup (Non-intrusive)
   ================================= */

/* Base RTL direction - only set text alignment and reading direction */
[dir="rtl"] {
  direction: rtl;
  text-align: start; /* Use logical property */
}

/* RTL font family for Arabic text */
[dir="rtl"] {
  font-family: 'Tajawal', -apple-system, BlinkMacSystemFont, sans-serif;
}

/* =================================
   Scoped Flex Layout (Opt-in only)
   ================================= */

/* Only apply flex-row-reverse to elements that explicitly request RTL layout */
[dir="rtl"] .rtl-flex {
  flex-direction: row-reverse;
}

/* Keep standard flex behavior unless explicitly requesting RTL */
[dir="rtl"] .flex {
  flex-direction: row; /* Default behavior, no automatic reversal */
}

[dir="rtl"] .flex-col {
  flex-direction: column; /* Column is always the same */
}

/* Grid containers that need RTL behavior */
[dir="rtl"] .grid.rtl-grid {
  direction: rtl;
}

/* =================================
   Form Elements (Targeted fixes)
   ================================= */

/* RTL input styling - only for inputs that should be RTL */
[dir="rtl"] input.rtl-input:not([type="number"]):not([type="tel"]):not(.ltr-input) {
  direction: rtl;
  text-align: start;
}

/* Auth form specific styling for RTL */
[dir="rtl"] .auth-input-with-icon {
  padding-inline-start: 1rem;
  padding-inline-end: 2.5rem;
}

[dir="rtl"] .auth-input-icon {
  inset-inline-end: 0.75rem;
  inset-inline-start: auto;
}

[dir="rtl"] .auth-password-toggle {
  inset-inline-end: 0.25rem;
  inset-inline-start: auto;
}

/* =================================
   Icon Management (Specific only)
   ================================= */

/* Only flip specific directional icons/arrows */
[dir="rtl"] .icon-arrow,
[dir="rtl"] .arrow-icon,
[dir="rtl"] .lucide-arrow-left,
[dir="rtl"] .lucide-arrow-right,
[dir="rtl"] .lucide-chevron-left,
[dir="rtl"] .lucide-chevron-right,
[dir="rtl"] .lucide-arrow-up-right,
[dir="rtl"] .lucide-arrow-down-right {
  transform: scaleX(-1);
}

/* Breadcrumb separators */
[dir="rtl"] .breadcrumb-separator {
  transform: scaleX(-1);
}

/* Header and navigation arrow flips */
[dir="rtl"] .navbar-icon.arrow-icon,
[dir="rtl"] header svg.arrow-icon {
  transform: scaleX(-1);
}

/* Do NOT flip other icons automatically */
[dir="rtl"] .icon:not(.icon-arrow):not(.arrow-icon),
[dir="rtl"] svg:not(.arrow-icon):not(.lucide-arrow-left):not(.lucide-arrow-right):not(.lucide-chevron-left):not(.lucide-chevron-right):not(.lucide-arrow-up-right):not(.lucide-arrow-down-right) {
  transform: none;
}

/* =================================
   Utility Classes (Opt-in RTL)
   ================================= */

/* Margin utilities using logical properties */
.rtl-margin-start-1 { margin-inline-start: 0.25rem; }
.rtl-margin-start-2 { margin-inline-start: 0.5rem; }
.rtl-margin-start-3 { margin-inline-start: 0.75rem; }
.rtl-margin-start-4 { margin-inline-start: 1rem; }

.rtl-margin-end-1 { margin-inline-end: 0.25rem; }
.rtl-margin-end-2 { margin-inline-end: 0.5rem; }
.rtl-margin-end-3 { margin-inline-end: 0.75rem; }
.rtl-margin-end-4 { margin-inline-end: 1rem; }

/* Padding utilities using logical properties */
.rtl-padding-start-1 { padding-inline-start: 0.25rem; }
.rtl-padding-start-2 { padding-inline-start: 0.5rem; }
.rtl-padding-start-3 { padding-inline-start: 0.75rem; }
.rtl-padding-start-4 { padding-inline-start: 1rem; }

.rtl-padding-end-1 { padding-inline-end: 0.25rem; }
.rtl-padding-end-2 { padding-inline-end: 0.5rem; }
.rtl-padding-end-3 { padding-inline-end: 0.75rem; }
.rtl-padding-end-4 { padding-inline-end: 1rem; }

/* Text alignment utilities */
.rtl-text-start { text-align: start; }
.rtl-text-end { text-align: end; }

/* Legacy RTL utilities (for gradual migration) */
.rtl-flip { transform: scaleX(-1); }
.rtl-margin-start { margin-inline-start: 0.5rem; }
.rtl-margin-end { margin-inline-end: 0.5rem; }
.rtl-padding-start { padding-inline-start: 0.5rem; }
.rtl-padding-end { padding-inline-end: 0.5rem; }

/* =================================
   Positioning (Safe logical properties)
   ================================= */

/* Dropdown and menu positioning - opt-in */
[dir="rtl"] .dropdown-menu.rtl-position {
  right: 0;
  left: auto;
}

[dir="rtl"] .popover-content.rtl-position {
  right: 0;
  left: auto;
}

/* Search input icons - opt-in */
[dir="rtl"] .search-icon.rtl-position {
  right: 0.75rem;
  left: auto;
}

/* Toast positioning - opt-in */
[dir="rtl"] .toast.rtl-position {
  right: 1rem;
  left: auto;
}

/* Sidebar positioning - opt-in */
[dir="rtl"] .sidebar.rtl-position {
  right: 0;
  left: auto;
}

/* =================================
   Component-Specific Fixes
   ================================= */

/* Card components */
[dir="rtl"] .card-header {
  text-align: start;
}

[dir="rtl"] .card-content {
  text-align: start;
}

/* Form labels */
[dir="rtl"] label {
  text-align: start;
}

/* Table alignment */
[dir="rtl"] .table th,
[dir="rtl"] .table td {
  text-align: start;
}

/* Progress bars - keep visual direction LTR */
[dir="rtl"] .progress-bar {
  direction: ltr;
}

/* Tab navigation */
[dir="rtl"] .tabs-list.rtl-tabs {
  direction: rtl;
}

[dir="rtl"] .tab-trigger {
  text-align: start;
}

/* Dialog content */
[dir="rtl"] .dialog-content {
  text-align: start;
}

/* Form field errors */
[dir="rtl"] .field-error {
  text-align: start;
  margin-inline-start: 0;
}

/* Loading text */
[dir="rtl"] .loading-text {
  text-align: center;
}

/* Select components */
[dir="rtl"] .select-trigger {
  text-align: start;
}

[dir="rtl"] .select-content {
  text-align: start;
}

/* Avatar fallback */
[dir="rtl"] .avatar-fallback {
  text-align: center;
}

/* Command palette */
[dir="rtl"] .command-input {
  text-align: start;
}

[dir="rtl"] .command-item {
  text-align: start;
}

/* Checkbox and radio positioning - opt-in */
[dir="rtl"] .checkbox-wrapper.rtl-wrapper {
  flex-direction: row-reverse;
}

[dir="rtl"] .radio-wrapper.rtl-wrapper {
  flex-direction: row-reverse;
}

/* =================================
   Exceptions (Elements that stay LTR)
   ================================= */

/* These elements always maintain LTR behavior */
[dir="rtl"] .ltr-content,
[dir="rtl"] .number-display,
[dir="rtl"] .western-nums,
[dir="rtl"] input[type="number"],
[dir="rtl"] input[type="tel"],
[dir="rtl"] .ltr-input {
  direction: ltr;
  text-align: start;
}

/* Language selector and mobile nav stay LTR */
[dir="rtl"] .language-buttons,
[dir="rtl"] .language-selector,
[dir="rtl"] .mobile-navbar:not(.rtl-nav),
[dir="rtl"] .mobile-nav-container:not(.rtl-nav),
[dir="rtl"] .mobile-nav-item:not(.rtl-nav),
[dir="rtl"] nav:not(.rtl-nav),
[dir="rtl"] .navbar-actions:not(.rtl-nav) {
  direction: ltr;
  flex-direction: row;
}

[dir="rtl"] .mobile-nav-item {
  text-align: center;
}

[dir="rtl"] .language-buttons button {
  text-align: center;
}

/* =================================
   Spacing Utilities (Logical Properties)
   ================================= */

/* RTL-aware spacing that works with flex - opt-in */
.rtl-space-x-1 > :not([hidden]) ~ :not([hidden]) {
  margin-inline-start: 0.25rem;
}

.rtl-space-x-2 > :not([hidden]) ~ :not([hidden]) {
  margin-inline-start: 0.5rem;
}

.rtl-space-x-4 > :not([hidden]) ~ :not([hidden]) {
  margin-inline-start: 1rem;
}

/* Tailwind space-x overrides for RTL - more precise */
[dir="rtl"] .space-x-1.rtl-space > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 1;
  margin-inline-start: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
  margin-inline-end: calc(0.25rem * var(--tw-space-x-reverse));
}

[dir="rtl"] .space-x-2.rtl-space > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 1;
  margin-inline-start: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
  margin-inline-end: calc(0.5rem * var(--tw-space-x-reverse));
}

[dir="rtl"] .space-x-4.rtl-space > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 1;
  margin-inline-start: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
  margin-inline-end: calc(1rem * var(--tw-space-x-reverse));
}

/* =================================
   Animation and Transition Safe RTL
   ================================= */

/* RTL-safe transitions that don't cause layout issues */
[dir="rtl"] .rtl-transition {
  transition: margin-inline-start 0.3s ease, margin-inline-end 0.3s ease, padding-inline-start 0.3s ease, padding-inline-end 0.3s ease;
}

/* =================================
   Debug Utilities (Development only)
   ================================= */

/* Debug class to highlight RTL elements during development */
.rtl-debug [dir="rtl"] {
  outline: 1px dashed orange;
}

.rtl-debug .rtl-flex {
  outline: 2px dashed blue;
}

/* =================================
   Migration Helpers
   ================================= */

/* 
   Migration notes:
   - Use .rtl-flex instead of relying on automatic flex reversal
   - Use logical properties (margin-inline-start/end) instead of left/right
   - Add .rtl-position to elements that need RTL positioning
   - Use .rtl-space class with space-x-* for proper RTL spacing
   - Remove global overrides that were causing layout issues
*/